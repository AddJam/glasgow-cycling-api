var search_data = {"index":{"searchIndex":["accident","applicationcontroller","applicationhelper","attraction","custommailer","events","flagging","hour","insertionbenchmark","object","poicontroller","poihelper","pointsextractor","reviewcontroller","reviewhelper","route","routecontroller","routehelper","routepoint","routereview","statscontroller","statshelper","user","usercontroller","userhelper","userresponse","weather","weathercontroller","weatherperiod","weatherworker","all()","all_uses()","at_hour()","confirmation_instructions()","create_review()","days()","days()","delete()","details()","details()","ensure_maidenhead()","extract_all_types()","extract_locations()","find()","flag()","forgot_password()","generate!()","get_street()","hours()","hours()","insert_points()","is_accessible_by?()","is_similar?()","maidenheads()","new()","perform()","perform_benchmark()","period()","points_data()","record()","record()","register()","reset_password()","reset_password_instructions()","retrieve()","review()","save_responses()","search()","signin()","signup()","stats_for_hours()","store()","summarise_routes()","summary()","to_coordinates()","unlock_instructions()","update_details()","weeks()","weeks()","readme"],"longSearchIndex":["accident","applicationcontroller","applicationhelper","attraction","custommailer","events","flagging","hour","insertionbenchmark","object","poicontroller","poihelper","pointsextractor","reviewcontroller","reviewhelper","route","routecontroller","routehelper","routepoint","routereview","statscontroller","statshelper","user","usercontroller","userhelper","userresponse","weather","weathercontroller","weatherperiod","weatherworker","poicontroller#all()","route#all_uses()","weatherperiod::at_hour()","custommailer#confirmation_instructions()","route#create_review()","hour::days()","statscontroller#days()","routecontroller#delete()","user#details()","usercontroller#details()","routepoint#ensure_maidenhead()","pointsextractor#extract_all_types()","pointsextractor#extract_locations()","routecontroller#find()","routecontroller#flag()","usercontroller#forgot_password()","hour::generate!()","routepoint#get_street()","hour::hours()","statscontroller#hours()","insertionbenchmark#insert_points()","user#is_accessible_by?()","route#is_similar?()","route#maidenheads()","pointsextractor::new()","weatherworker#perform()","insertionbenchmark#perform_benchmark()","hour::period()","route#points_data()","route::record()","routecontroller#record()","user::register()","usercontroller#reset_password()","custommailer#reset_password_instructions()","weathercontroller#retrieve()","reviewcontroller#review()","usercontroller#save_responses()","routecontroller#search()","usercontroller#signin()","usercontroller#signup()","hour::stats_for_hours()","userresponse::store()","route::summarise_routes()","route#summary()","route#to_coordinates()","custommailer#unlock_instructions()","usercontroller#update_details()","hour::weeks()","statscontroller#weeks()",""],"info":[["Accident","","Accident.html","","<p>Schema Information\n<p>Table name: accidents\n\n<pre>id              :integer          not null, primary key\ndate  ...</pre>\n"],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Attraction","","Attraction.html","","<p>Schema Information\n<p>Table name: attractions\n\n<pre>id          :integer          not null, primary key\ntype    ...</pre>\n"],["CustomMailer","","CustomMailer.html","",""],["Events","","Events.html","","<p>Schema Information\n<p>Table name: events\n\n<pre>id                   :integer          not null, primary key\ntype ...</pre>\n"],["Flagging","","Flagging.html","","<p>Schema Information\n<p>Table name: flaggings\n\n<pre>id         :integer          not null, primary key\nuser_id    ...</pre>\n"],["Hour","","Hour.html","","<p>Schema Information\n<p>Table name: hours\n\n<pre>id               :integer          not null, primary key\nuser_id  ...</pre>\n"],["InsertionBenchmark","","InsertionBenchmark.html","",""],["Object","","Object.html","",""],["PoiController","","PoiController.html","",""],["PoiHelper","","PoiHelper.html","",""],["PointsExtractor","","PointsExtractor.html","",""],["ReviewController","","ReviewController.html","",""],["ReviewHelper","","ReviewHelper.html","",""],["Route","","Route.html","","<p>Schema Information\n<p>Table name: routes\n\n<pre>id                 :integer          not null, primary key\nname  ...</pre>\n"],["RouteController","","RouteController.html","",""],["RouteHelper","","RouteHelper.html","",""],["RoutePoint","","RoutePoint.html","","<p>Schema Information\n<p>Table name: route_points\n\n<pre>id                  :integer          not null, primary key ...</pre>\n"],["RouteReview","","RouteReview.html","","<p>Schema Information\n<p>Table name: route_reviews\n\n<pre>id                 :integer          not null, primary key ...</pre>\n"],["StatsController","","StatsController.html","",""],["StatsHelper","","StatsHelper.html","",""],["User","","User.html","","<p>Schema Information\n<p>Table name: users\n\n<pre>id                     :integer          not null, primary key\nemail ...</pre>\n"],["UserController","","UserController.html","",""],["UserHelper","","UserHelper.html","",""],["UserResponse","","UserResponse.html","","<p>Schema Information\n<p>Table name: user_responses\n\n<pre>id             :integer          not null, primary key\nuser_id ...</pre>\n"],["Weather","","Weather.html","","<p>Schema Information\n<p>Table name: weathers\n\n<pre>id         :integer          not null, primary key\ndate       :datetime ...</pre>\n"],["WeatherController","","WeatherController.html","",""],["WeatherPeriod","","WeatherPeriod.html","","<p>Table name: weather_periods\n\n<pre>id                        :integer          not null, primary key\nweather_id ...</pre>\n"],["WeatherWorker","","WeatherWorker.html","",""],["all","PoiController","PoiController.html#method-i-all","()",""],["all_uses","Route","Route.html#method-i-all_uses","()",""],["at_hour","WeatherPeriod","WeatherPeriod.html#method-c-at_hour","(timestamp)","<p>Returns weather for given hour, if no hour given return todays weather\n<p>Returns\n<p>The weather\n"],["confirmation_instructions","CustomMailer","CustomMailer.html#method-i-confirmation_instructions","()","<p>Subject can be set in your I18n file at config/locales/en.yml with the\nfollowing lookup:\n\n<pre>en.custom_mailer.confirmation_instructions.subject</pre>\n"],["create_review","Route","Route.html#method-i-create_review","(user, review_data)","<p>Records a new review against the route and the provided user\n<p>Parameters\n<p>user &mdash; user making the review\n"],["days","Hour","Hour.html#method-c-days","(num_days, user=nil)","<p>Cumulative stats from now to num_days ago\n"],["days","StatsController","StatsController.html#method-i-days","()",""],["delete","RouteController","RouteController.html#method-i-delete","()","<p>DELETE /routes/:route_id Delete a route owned by the authenticated user\n"],["details","User","User.html#method-i-details","()","<p>Returns this users details as json\n<p>Returns\n<p>The user details such as most used route, time and distance …\n"],["details","UserController","UserController.html#method-i-details","()","<p><strong>GET</strong> /details\n<p>Returns the user overview details for the logged in user\n<p>Parameters\n"],["ensure_maidenhead","RoutePoint","RoutePoint.html#method-i-ensure_maidenhead","()",""],["extract_all_types","PointsExtractor","PointsExtractor.html#method-i-extract_all_types","()",""],["extract_locations","PointsExtractor","PointsExtractor.html#method-i-extract_locations","(type, file_name)",""],["find","RouteController","RouteController.html#method-i-find","()","<p><strong>GET</strong> /routes/:id\n<p>Returns route matching id parameter\n<p>Parameters\n"],["flag","RouteController","RouteController.html#method-i-flag","()","<p>PUT /routes/flag/:route_id Flag the specified route\n"],["forgot_password","UserController","UserController.html#method-i-forgot_password","()","<p><strong>POST</strong> /forgot_password\n"],["generate!","Hour","Hour.html#method-c-generate-21","(points, user=nil)","<p>Generates Hours from points which contain:\n\n<pre>- time\n- speed\n- distance</pre>\n"],["get_street","RoutePoint","RoutePoint.html#method-i-get_street","()",""],["hours","Hour","Hour.html#method-c-hours","(num_hours, user=nil)","<p>Cumulative stats from now to num_hours ago\n"],["hours","StatsController","StatsController.html#method-i-hours","()",""],["insert_points","InsertionBenchmark","InsertionBenchmark.html#method-i-insert_points","()",""],["is_accessible_by?","User","User.html#method-i-is_accessible_by-3F","(user)",""],["is_similar?","Route","Route.html#method-i-is_similar-3F","(other_route)",""],["maidenheads","Route","Route.html#method-i-maidenheads","()",""],["new","PointsExtractor","PointsExtractor.html#method-c-new","()",""],["perform","WeatherWorker","WeatherWorker.html#method-i-perform","()",""],["perform_benchmark","InsertionBenchmark","InsertionBenchmark.html#method-i-perform_benchmark","()",""],["period","Hour","Hour.html#method-c-period","(unit, num, user=nil)",""],["points_data","Route","Route.html#method-i-points_data","()","<p>Returns points for a route in format required by Route Controller\n<p>Returns\n<p>The route points\n"],["record","Route","Route.html#method-c-record","(user, points)","<p>Records a new route for the given user\n<p>Parameters\n<p>user &mdash; the user who the route is being recorded against …\n"],["record","RouteController","RouteController.html#method-i-record","()","<p><strong>POST</strong> /routes\n<p>Records a route for the logged in user\n<p><strong>Requires:</strong> logged in user (provide <code>user_email</code>\nand <code>user_token</code> …\n"],["register","User","User.html#method-c-register","(user_data)","<p>Registers a new user with the provided details\n<p>Parameters\n<p>user_data &mdash; Details of the user to be created\n"],["reset_password","UserController","UserController.html#method-i-reset_password","()",""],["reset_password_instructions","CustomMailer","CustomMailer.html#method-i-reset_password_instructions","(record, token, opts={})","<p>Subject can be set in your I18n file at config/locales/en.yml with the\nfollowing lookup:\n\n<pre>en.custom_mailer.reset_password_instructions.subject</pre>\n"],["retrieve","WeatherController","WeatherController.html#method-i-retrieve","()","<p><strong>GET</strong> /weather\n<p>Get&#39;s hourly weather from the applications Weather model for the hour\nof a given timeperiod. …\n"],["review","ReviewController","ReviewController.html#method-i-review","()","<p><strong>POST</strong> /reviews\n<p>Records a review of a route for the logged in user.\n<p><strong>Requires:</strong> logged in user (provide <code>user_email</code>\n…\n"],["save_responses","UserController","UserController.html#method-i-save_responses","()","<p><strong>POST</strong> /responses\n"],["search","RouteController","RouteController.html#method-i-search","()","<p><strong>GET</strong> /search\n<p>Search routes by source, destination or with authorized user as the creator\n<p>###Params\n"],["signin","UserController","UserController.html#method-i-signin","()","<p><strong>GET</strong> /signin\n<p>Returns the authentication token for an existing user\n<p>Parameters\n"],["signup","UserController","UserController.html#method-i-signup","()","\n<pre>*POST* /signup\n\nRegisters a new user based on the given details.\n\n==== Parameters\n+user+ - JSON object ...</pre>\n"],["stats_for_hours","Hour","Hour.html#method-c-stats_for_hours","(hours)",""],["store","UserResponse","UserResponse.html#method-c-store","(responses, user_id)",""],["summarise_routes","Route","Route.html#method-c-summarise_routes","(start_maidenhead, end_maidenhead, user)","<p>Summary of all routes between a start and end maidenhead\n"],["summary","Route","Route.html#method-i-summary","()","<p>Returns summary of this route and all uses\n<p>Returns\n<p>The route details.\n"],["to_coordinates","Route","Route.html#method-i-to_coordinates","()",""],["unlock_instructions","CustomMailer","CustomMailer.html#method-i-unlock_instructions","()",""],["update_details","UserController","UserController.html#method-i-update_details","()","<p><strong>PUT</strong> /details\n"],["weeks","Hour","Hour.html#method-c-weeks","(num_weeks, user=nil)","<p>Cumulative stats from now to num_weeks ago\n"],["weeks","StatsController","StatsController.html#method-i-weeks","()",""],["README","","README_rdoc.html","","<p>JourneyAPI\n<p>\n<p>API for capturing and planning journeys.\n"]]}}